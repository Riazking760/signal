import logging
import random
import pygame
import numpy as np
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# ‡¶≤‡¶ó‡¶ø‡¶Ç ‡¶∏‡ßá‡¶ü ‡¶Ü‡¶™ ‡¶ï‡¶∞‡¶æ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# Pygame ‡¶á‡¶®‡¶ø‡¶∂‡¶ø‡¶Ø‡¶º‡¶æ‡¶≤‡¶æ‡¶á‡¶ú ‡¶ï‡¶∞‡¶æ
pygame.init()

# ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡ßÄ‡¶® ‡¶∏‡ßá‡¶ü ‡¶Ü‡¶™
screen = pygame.display.set_mode((800, 600))
pygame.display.set_caption('3D Wheel')

# ‡¶∞‡¶ô ‡¶∏‡¶Ç‡¶ú‡ßç‡¶û‡¶æ‡¶Ø‡¶º‡¶ø‡¶§ ‡¶ï‡¶∞‡¶æ
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)

# ‡¶ö‡¶æ‡¶ï‡¶æ ‡¶è‡¶∞ ‡¶≠‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶¨‡¶≤
wheel_radius = 200
wheel_center = (400, 300)

# ‡¶ö‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ö‡¶™‡¶∂‡¶®
options = ['üçè', 'üçé', 'üçå', 'üçá', 'üçä', 'üçó', 'üçï', 'üçî', 'üç£', 'üç©']

# ‡¶ö‡¶æ‡¶ï‡¶æ ‡¶ò‡ßã‡¶∞‡¶æ‡¶®‡ßã‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
def draw_wheel(angle):
    screen.fill(WHITE)
    for i, option in enumerate(options):
        # ‡¶ï‡ßã‡¶£ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ
        theta = angle + (i * (360 / len(options))) * np.pi / 180
        x = wheel_center[0] + wheel_radius * np.cos(theta)
        y = wheel_center[1] + wheel_radius * np.sin(theta)
        pygame.draw.circle(screen, BLACK, (int(x), int(y)), 20)
        font = pygame.font.Font(None, 36)
        text = font.render(option, True, BLACK)
        screen.blit(text, (x - 10, y - 10))
    pygame.display.flip()

# ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶¨‡¶ü ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text('‡¶¨‡ßá‡¶ü‡¶ø‡¶Ç ‡¶ó‡ßá‡¶Æ‡ßá ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ! ‡¶ñ‡ßá‡¶≤‡¶æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶§‡ßá /play ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®‡•§')

async def play(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("‡¶ö‡¶æ‡¶ï‡¶æ ‡¶ò‡ßÅ‡¶∞‡¶æ‡¶§‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...")
    
    # Pygame ‡¶è ‡¶ö‡¶æ‡¶ï‡¶æ ‡¶ò‡ßã‡¶∞‡¶æ‡¶®‡ßã‡¶∞ ‡¶Æ‡ßá‡¶á‡¶® ‡¶≤‡ßÅ‡¶™
    running = True
    angle = 0
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
        
        angle += random.randint(1, 5)  # ‡¶ö‡¶æ‡¶ï‡¶æ ‡¶ò‡ßÅ‡¶∞‡¶æ‡¶®‡ßã
        draw_wheel(np.radians(angle))  # ‡¶ö‡¶æ‡¶ï‡¶æ ‡¶Ü‡¶Å‡¶ï‡¶æ

        pygame.time.delay(100)
    
    # ‡¶™‡ßÅ‡¶∞‡¶∏‡ßç‡¶ï‡¶æ‡¶∞ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡¶æ
    prize = random.choice(options)
    await update.message.reply_text(f'‡¶Ü‡¶™‡¶®‡¶ø {prize} ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶ú‡¶ø‡¶§‡ßá‡¶õ‡ßá‡¶®!')

def main():
    # ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶¨‡¶ü‡ßá‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ
    application = ApplicationBuilder().token('7527810081:AAEOK4wUYj2OKpCZQldcQHgULAy4JZRtRss').build()

    # ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞ ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡¶æ
    application.add_handler(CommandHandler('start', start))
    application.add_handler(CommandHandler('play', play))

    # ‡¶¨‡¶ü ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶æ
    try:
        application.run_polling()
    except Exception as e:
        logging.error(f"‡¶¨‡¶ü ‡¶ö‡¶æ‡¶≤‡¶æ‡¶®‡ßã‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶è‡¶ï‡¶ü‡¶ø ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø ‡¶ò‡¶ü‡ßá‡¶õ‡ßá: {e}")

if __name__ == '__main__':
    main()
